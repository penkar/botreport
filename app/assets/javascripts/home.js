$(document).ready(function(){
	$('form').on('ajax:success', function(event, data, status, xhr) {
		var options = data;
		dropOption();
		addOption(options);
		console.log(data);
	})

	var dropOption = function(){
		$('#results').contents().toggle(800).remove();
	}
	var addOption = function(optionData){
		var htmlcalldescr = '<br><hr><strong>What is a Call option?</strong><p>A call option represents the ability to purchase a stock at a given (strike) price. It is a hedge against upwards movement. So if you buy a call option with a strike of $20 that will expire in one year, and the price a year from now is $50, you can then buy for $20, sell for $50 and essentially receive a $30 profit.</p>';
		var htmlputdescr = '<br><hr><strong>What is a Put option?</strong><p>A put option represent the ability to sell a stock at a given (strike) price. It is a hedge against downward movement. So if you sell a put option with a strike of $20 that will expire in one year, and the price a year from now is $10, you can buy for $10, then sell for $20 and essentally receive a $10 profit.</p>';
		var htmld1descr = '<br><hr><strong>What exactly is D1?</strong><p>D1 is the z-value present value of the stock finishing in a position where it is in the money. Normal distance converts the D1 z-figure into a success percentage. Essentially N(D1) is the present value of an in the money call option.</p>';
		var htmld2descr = '<br><hr><strong>What exactly is D2?</strong><p>D2 represents the present value of money spent to exercise the option given its probability of being in the money.</p>';
		var htmlcall = "<table><tbody><tr><td> Call Price </td><td> = </td><td> Stock Price </td><td> * </td><td> NormDist ( </td><td> D1 </td><td> ) - ( </td><td> Strike Price </td><td> * </td><td> e^ </td><td> -( </td><td> Time </td><td> * </td><td> Risk Free Rate </td><td> ) * </td><td> NormDist ( </td><td> D2 </td><td> ) </td></tr><tr><td> </td><td> = </td><td> "+ optionData.price +" </td><td> * </td><td> NormDist ( </td><td> "+ optionData.d1 +" </td><td> ) - ( </td><td> "+optionData.strike+" </td><td> * </td><td> e^ </td><td> -( </td><td> "+optionData.time+" </td><td> * </td><td> "+optionData.rf+" </td><td> ) * </td><td> NormDist ( </td><td> "+optionData.d2+" </td><td> ) </td></tr><tr><td> </td><td> = </td><td> "+ optionData.price +" </td><td> * </td><td> " +optionData.nd1+ "  </td><td>  </td><td>  - ( </td><td> "+optionData.strike+" </td><td> * </td><td> e^ </td><td> -( </td><td> "+optionData.time+" </td><td> * </td><td> "+optionData.rf+" </td><td> ) * </td><td> " +optionData.nd2+ " </td><td>  </td><td> ) </td></tr><tr><td></td><td> = </td><td></td><td>  </td><td> " +(optionData.nd1 * optionData.price).toFixed(4) + "  </td><td>  </td><td> - </td><td>  </td><td> ( </td><td> e^ </td><td> -( </td><td> "+optionData.time * optionData.rf +" </td><td>)</td><td></td><td>  * </td><td> " + (optionData.nd2 * optionData.strike).toFixed(4) + " </td><td>  </td><td> ) </td></tr><tr><td></td><td> = </td><td></td><td>  </td><td> " +(optionData.nd1 * optionData.price).toFixed(4) + "  </td><td>  </td><td> - </td><td>  </td><td>  </td><td>  </td><td> ( </td><td> "+optionData.epow +" </td><td></td><td></td><td>  * </td><td> " + (optionData.nd2 * optionData.strike).toFixed(4) + " </td><td>  </td><td> ) </td></tr><tr><td></td><td> = </td><td></td><td>  </td><td> " +(optionData.nd1 * optionData.price).toFixed(4) + "  </td><td>  </td><td> - </td><td>  </td><td>  </td><td>  </td><td> </td><td> "+ (optionData.epow * (optionData.nd2 * optionData.strike)).toFixed(4)+" </td>)<td></td><td></td><td> </td><td> </td><td>  </td><td> </td></tr><tr><td> Call Price </td><td> = </td><td></td><td>  </td><td> </td><td>  </td><td></td><td>  </td><td>  </td><td>  </td><td> ( </td><td> "+optionData.call +" </td><td>)</td><td></td><td> </td><td> </td><td>  </td><td> </td></tr></tbody></table>";
		var htmld1 = "<table><tbody><tr><table><tbody><tr><td>D1</td><td> = </td><td>Log ( </td><td> Price </td><td> / </td><td> Strike Price </td><td>) + </td><td> Time to Maturity </td><td> * ( </td><td> Risk Free Rate </td><td> + ( ( </td><td> Stock Volatility </td><td> ^2 </td><td> )) / ( </td><td> Stock Volatility </td><td> * </td><td> Time to Maturity </td><td> ^(1/2) </td><td> ) </td></tr><tr><td></td><td> = </td><td>Log ( </td><td>" +optionData.price + "</td><td> / </td><td>" + optionData.strike +"</td><td>) + </td><td>"+ optionData.time +"</td><td> * ( </td><td>"+ optionData.rf + "</td><td> + ( ( </td><td>" + optionData.vol +"</td><td> ^2 </td><td> )) / ( </td><td>"+optionData.vol +"+</td><td> * </td><td>"+ optionData.time +"</td><td> ^(1/2) </td><td> ) </td></tr><tr><td></td><td> = </td><td>Log ( </td><td>" + (optionData.price/ optionData.strike).toFixed(4) + "</td><td></td><td></td><td>) + </td><td>"+ optionData.time +"</td><td> * ( </td><td>"+ optionData.rf + "</td><td> + ( </td><td>" + Math.pow(optionData.vol,2).toFixed(4) +"</td><td></td><td> ) / ( </td><td>"+optionData.vol+ "+</td><td> * </td><td>"+ Math.pow(optionData.time, 0.5).toFixed(4) +"</td><td>)</td><td></td></tr><tr><td></td><td> = </td><td></td><td>" + (Math.log(optionData.price/ optionData.strike)).toFixed(4) + "</td><td></td><td></td><td>) + </td><td></td><td></td><td></td><td>(</td><td>" + (optionData.time * (optionData.rf +  Math.pow(optionData.vol,2))).toFixed(4) +"</td><td></td><td> ) / ( </td><td>"+(optionData.vol * Math.pow(optionData.time, 0.5)).toFixed(4)+"</td><td> ) </td><td></td><td></td><td></td></tr><tr><td>D1</td><td> = </td><td></td><td>"+optionData.d1+"</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>";
		var htmld2 = "<table><tbody><tr><td>D2</td><td> = </td><td> D1 </td><td> - ( </td><td> Stock Volatility </td><td> * ( </td><td> Time to Maturity </td><td> ^ ( 1/2) )</td></tr><tr><td></td><td> = </td><td> "+optionData.d1+"</td><td> - ( </td>	<td> "+optionData.vol+"</td><td> * ( </td><td>"+ optionData.time +"</td><td> ^ ( 1/2) )</td></tr><tr><td></td><td> = </td><td> "+optionData.d1+"</td><td> - ( </td><td> "+optionData.vol+"</td><td> * ( </td><td>"+ (Math.pow(optionData.time,0.5)).toFixed(4) +"</td><td> ) </td></tr><tr><td></td><td> = </td><td> "+optionData.d1+"</td><td> - ( </td><td></td><td></td><td>"+ (optionData.vol * Math.pow(optionData.time,0.5)).toFixed(4) +"</td><td> ) </td></tr><tr><td>D2</td><td> = </td><td> "+optionData.d2+"</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>";
		var htmlput = "<table><tbody><tr><td>Put Price = </td><td> Strike Price </td><td> * e ^(</td><td> - </td><td> Time </td><td> * </td><td> Risk Free Rate </td><td> ) - </td><td> Stock Price </td></tr><tr><td></td><td> "+optionData.strike+" </td><td> * e ^(</td><td> - </td><td> "+optionData.time+" </td><td> * </td><td> "+optionData.rf+"</td><td> ) - </td><td> "+optionData.price+" </td></tr><tr><td></td><td> "+optionData.strike+" </td><td> * e ^(</td><td> - </td><td> "+(optionData.time* optionData.rf).toFixed(4)+" </td><td> ) </td><td> </td><td> - </td><td> "+optionData.price+" </td></tr><tr><td></td><td> "+optionData.strike+" </td><td> * (</td><td></td><td> "+(Math.pow(Math.E,optionData.time* optionData.rf)).toFixed(4)+" </td><td> ) </td><td> </td><td> - </td><td> "+optionData.price+" </td></tr><tr><td></td><td></td><td></td><td>(</td><td> "+(optionData.strike* Math.pow(Math.E,optionData.time* optionData.rf)).toFixed(4)+" </td><td> ) </td><td> </td><td> - </td><td> "+optionData.price+" </td></tr><tr><td>Put Price = </td><td></td><td></td><td></td><td> "+optionData.put +"</td><td></td><td></td><td></td><td></td></tr><tr></tr></tbody></table>";
		$('#results').append(htmld1descr);
		$('#results').append(htmld1);
		$('#results').append(htmld2descr);
		$('#results').append(htmld2);
		$('#results').append(htmlcalldescr);
		$('#results').append(htmlcall);
		$('#results').append(htmlputdescr);
		$('#results').append(htmlput);
	}
})

